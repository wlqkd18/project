<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgitbank.ssg.mybatis.product.ProductMapper">
	<resultMap type="com.kgitbank.ssg.product.dto.ProductDTO" id="product">
		<id property="productNo" column="product_no"/>
		<result property="productName" column="product_name"/>
		<result property="productPrice" column="product_price"/>
		<result property="hit" column="hit"/>
		<result property="imageFileName" column="image_file_name"/>		
		<result property="saveDate" column="savedate"/>		
		<result property="productType" column="product_type"/>				
		<result property="originFileName" column="origin_file_name"/>				
	</resultMap>
	
	<select id="getProduct" resultMap="product">
		select * from product where product_type=#{productType}
	</select>
	
	<insert id="productSave">
		insert into product(product_no, product_name, product_price, image_file_name, product_type, origin_file_name)
		values((select nvl(max(product_no) + 1, 1) from product), #{productName}, #{productPrice}, #{imageFileName}, #{productType}, #{originFileName})
	</insert>
	
	<select id="getProductList" resultMap="product">
		select * from product order by product_no desc
	</select>
	
	<select id="getProductInfo" resultMap="product">
		select * from product where product_no=#{productNo}
	</select>
	
	<delete id="productDelete">
		delete from product where product_no=#{productNo}
	</delete>
	
	<update id="productModify">
		update product set product_name=#{productName}, product_price=#{productPrice}, product_type=#{productType}, image_file_name=#{imageFileName} where product_no = #{productNo}
	</update> 

	<select id="getProductBasket" resultMap="product" parameterType="java.util.ArrayList">
		select * from product where product_no in 
		<foreach collection='list' index='index' item='productNo' open='(' close=')' separator=','>
			#{productNo}
			<!-- 
				collection = 전달받은 인자값(반드시 타입이 array 또는 list여야 한다.)
				index = 목록의 위치값
				item = 전달받은 인자값을 재 정의시 foreach문에서 사용할 변수명
				open = 해당 구문이 시작할 때 넣을 문자
				cloas = 해당 구문이 끝날 때 넣을 문자
				separator = 한번 이상 반복할 때 반복되는 사이에 해당 문을 넣어준다.
			 -->
		</foreach>
	</select>
	
		
</mapper>